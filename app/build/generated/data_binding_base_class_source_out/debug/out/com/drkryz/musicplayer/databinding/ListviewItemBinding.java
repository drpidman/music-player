// Generated by view binder compiler. Do not edit!
package com.drkryz.musicplayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.drkryz.musicplayer.R;
import com.drkryz.musicplayer.custom.CustomImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListviewItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ConstraintLayout itemSpace;

  @NonNull
  public final CustomImageView musicAlbumCover;

  @NonNull
  public final TextView musicAuthor;

  @NonNull
  public final TextView musicTitle;

  private ListviewItemBinding(@NonNull LinearLayout rootView, @NonNull ConstraintLayout itemSpace,
      @NonNull CustomImageView musicAlbumCover, @NonNull TextView musicAuthor,
      @NonNull TextView musicTitle) {
    this.rootView = rootView;
    this.itemSpace = itemSpace;
    this.musicAlbumCover = musicAlbumCover;
    this.musicAuthor = musicAuthor;
    this.musicTitle = musicTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListviewItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListviewItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.listview_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListviewItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.itemSpace;
      ConstraintLayout itemSpace = ViewBindings.findChildViewById(rootView, id);
      if (itemSpace == null) {
        break missingId;
      }

      id = R.id.musicAlbumCover;
      CustomImageView musicAlbumCover = ViewBindings.findChildViewById(rootView, id);
      if (musicAlbumCover == null) {
        break missingId;
      }

      id = R.id.musicAuthor;
      TextView musicAuthor = ViewBindings.findChildViewById(rootView, id);
      if (musicAuthor == null) {
        break missingId;
      }

      id = R.id.musicTitle;
      TextView musicTitle = ViewBindings.findChildViewById(rootView, id);
      if (musicTitle == null) {
        break missingId;
      }

      return new ListviewItemBinding((LinearLayout) rootView, itemSpace, musicAlbumCover,
          musicAuthor, musicTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
