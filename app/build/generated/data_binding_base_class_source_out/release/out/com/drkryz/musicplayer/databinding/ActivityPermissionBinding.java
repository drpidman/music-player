// Generated by view binder compiler. Do not edit!
package com.drkryz.musicplayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.drkryz.musicplayer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPermissionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final SwitchCompat DiscordPermission;

  @NonNull
  public final SwitchCompat StorageEnableSwitcher;

  @NonNull
  public final SwitchCompat UserCountPermission;

  @NonNull
  public final ImageButton acceptButton;

  @NonNull
  public final View centeredView;

  @NonNull
  public final TextView discordConnect;

  @NonNull
  public final TextView storageAccessText;

  @NonNull
  public final TextView textView;

  @NonNull
  public final View topCentered;

  @NonNull
  public final TextView userCountText;

  @NonNull
  public final TextView wText;

  private ActivityPermissionBinding(@NonNull ConstraintLayout rootView,
      @NonNull SwitchCompat DiscordPermission, @NonNull SwitchCompat StorageEnableSwitcher,
      @NonNull SwitchCompat UserCountPermission, @NonNull ImageButton acceptButton,
      @NonNull View centeredView, @NonNull TextView discordConnect,
      @NonNull TextView storageAccessText, @NonNull TextView textView, @NonNull View topCentered,
      @NonNull TextView userCountText, @NonNull TextView wText) {
    this.rootView = rootView;
    this.DiscordPermission = DiscordPermission;
    this.StorageEnableSwitcher = StorageEnableSwitcher;
    this.UserCountPermission = UserCountPermission;
    this.acceptButton = acceptButton;
    this.centeredView = centeredView;
    this.discordConnect = discordConnect;
    this.storageAccessText = storageAccessText;
    this.textView = textView;
    this.topCentered = topCentered;
    this.userCountText = userCountText;
    this.wText = wText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPermissionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPermissionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_permission, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPermissionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.DiscordPermission;
      SwitchCompat DiscordPermission = ViewBindings.findChildViewById(rootView, id);
      if (DiscordPermission == null) {
        break missingId;
      }

      id = R.id.StorageEnableSwitcher;
      SwitchCompat StorageEnableSwitcher = ViewBindings.findChildViewById(rootView, id);
      if (StorageEnableSwitcher == null) {
        break missingId;
      }

      id = R.id.UserCountPermission;
      SwitchCompat UserCountPermission = ViewBindings.findChildViewById(rootView, id);
      if (UserCountPermission == null) {
        break missingId;
      }

      id = R.id.acceptButton;
      ImageButton acceptButton = ViewBindings.findChildViewById(rootView, id);
      if (acceptButton == null) {
        break missingId;
      }

      id = R.id.centeredView;
      View centeredView = ViewBindings.findChildViewById(rootView, id);
      if (centeredView == null) {
        break missingId;
      }

      id = R.id.discordConnect;
      TextView discordConnect = ViewBindings.findChildViewById(rootView, id);
      if (discordConnect == null) {
        break missingId;
      }

      id = R.id.storageAccessText;
      TextView storageAccessText = ViewBindings.findChildViewById(rootView, id);
      if (storageAccessText == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.topCentered;
      View topCentered = ViewBindings.findChildViewById(rootView, id);
      if (topCentered == null) {
        break missingId;
      }

      id = R.id.userCountText;
      TextView userCountText = ViewBindings.findChildViewById(rootView, id);
      if (userCountText == null) {
        break missingId;
      }

      id = R.id.wText;
      TextView wText = ViewBindings.findChildViewById(rootView, id);
      if (wText == null) {
        break missingId;
      }

      return new ActivityPermissionBinding((ConstraintLayout) rootView, DiscordPermission,
          StorageEnableSwitcher, UserCountPermission, acceptButton, centeredView, discordConnect,
          storageAccessText, textView, topCentered, userCountText, wText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
